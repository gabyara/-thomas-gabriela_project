{"ast":null,"code":"var _jsxFileName = \"/home/gabriela/Documentos/proyecto/sr1-mast/client/src/components/Folder.js\";\nimport React, { Component } from 'react';\nimport folderPic from \"../Img/folder.svg\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\nimport { Row, Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from 'reactstrap';\n\nclass Folder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalEdit: false,\n      isOpen: false,\n      modal: false\n    };\n\n    this.clickCard = () => {\n      this.props.changeHere(this.props.children);\n    };\n\n    this.clickDelete = () => {\n      this.props.deleteElement(this.props.valueFile, true);\n    };\n\n    this.clickCopy = () => {\n      var aux = this.props.children;\n      this.props.copyElement(aux);\n    };\n\n    this.clickEdit = () => {\n      this.setState(prevState => ({\n        modalEdit: !prevState.modalEdit\n      }));\n    };\n\n    this.editName = () => {\n      var newName = document.getElementById(\"editName\").value;\n      this.props.editName(this.props.valueFile, newName);\n      this.clickEdit();\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.toggleCollapse = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.clickCard = () => {\n      this.props.changeHere(this.props.children);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \" element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(MDBDropdown, {\n      className: \"menuPic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(MDBDropdownToggle, {\n      nav: true,\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"bars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(MDBDropdownMenu, {\n      className: \"dropdown-default SubMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(MDBDropdownItem, {\n      onClick: this.clickDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Clear\"), React.createElement(MDBDropdownItem, {\n      onClick: this.clickEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Rename\"), React.createElement(MDBDropdownItem, {\n      onClick: this.clickCopy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Paste\"))), React.createElement(Modal, {\n      isOpen: this.state.modalEdit,\n      toggle: this.clickEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.clickEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Edit Name\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"newFolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"New Name for \", this.props.labelFile, \":\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"editName\",\n      id: \"editName\",\n      placeholder: \"New name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.editName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Edit\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.clickEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Cancel\")))), React.createElement(\"div\", {\n      className: \"clickeable\",\n      onClick: this.clickCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"folderIcon\",\n      src: folderPic,\n      width: \"80px\",\n      alt: \"Folder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"textElement\",\n      width: \"60px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.labelFile))));\n  }\n\n}\n\nexport default Folder;","map":{"version":3,"sources":["/home/gabriela/Documentos/proyecto/sr1-mast/client/src/components/Folder.js"],"names":["React","Component","MDBNavbar","MDBNavbarBrand","MDBNavbarNav","MDBNavItem","MDBNavLink","MDBNavbarToggler","MDBCollapse","MDBDropdown","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","MDBIcon","Row","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Label","Input","Folder","state","modalEdit","isOpen","modal","clickCard","props","changeHere","children","clickDelete","deleteElement","valueFile","clickCopy","aux","copyElement","clickEdit","setState","prevState","editName","newName","document","getElementById","value","toggle","toggleCollapse","render","labelFile","folderPic"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport folderPic from \"../Img/folder.svg\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\n  MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\"; \n  import { Row,Button, Modal, ModalHeader, ModalBody, ModalFooter , FormGroup, Label, Input  } from 'reactstrap';\nclass Folder extends Component {\n   \n  state={\n    modalEdit:false,isOpen: false,modal: false\n  }\n\n  clickCard= () => {\n    this.props.changeHere(this.props.children);\n  }\n  clickDelete = () => {\n    this.props.deleteElement(this.props.valueFile,true)\n  }\n  clickCopy = () => {\n    var aux = this.props.children;\n    this.props.copyElement(aux)\n  }\n  clickEdit= () => {\n    this.setState(prevState => ({\n      modalEdit: !prevState.modalEdit\n    }));\n  }\n\n  editName = () => {\n   var newName=document.getElementById(\"editName\").value;\n   this.props.editName(this.props.valueFile, newName)\n   this.clickEdit();\n  }\n\ntoggle = () => {\n  this.setState({\n    modal: !this.state.modal\n  });\n}\n\ntoggleCollapse = () => {\n  this.setState({ isOpen: !this.state.isOpen });\n}\n  clickCard= () => {\n    this.props.changeHere(this.props.children);\n  }\n  render() {\n      return (\n        <div className=\" element\" >\n        <Row>\n          \n          <MDBDropdown className=\"menuPic\" >\n            <MDBDropdownToggle nav caret>\n            <MDBIcon icon=\"bars\" /> \n              \n            </MDBDropdownToggle>\n            <MDBDropdownMenu className=\"dropdown-default SubMenu\">\n              <MDBDropdownItem  onClick={this.clickDelete}>Clear</MDBDropdownItem>\n              <MDBDropdownItem onClick={this.clickEdit}>Rename</MDBDropdownItem>\n              <MDBDropdownItem  onClick={this.clickCopy} >Paste</MDBDropdownItem>\n            </MDBDropdownMenu>\n          </MDBDropdown>\n          <Modal isOpen={this.state.modalEdit} toggle={this.clickEdit}>\n          <ModalHeader toggle={this.clickEdit}>Edit Name</ModalHeader>\n          <ModalBody>\n          <FormGroup>\n            <Label for=\"newFolder\">New Name for {this.props.labelFile}:</Label>\n            <Input type=\"text\" name=\"editName\" id=\"editName\" placeholder=\"New name\"/>\n          </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.editName}>Edit</Button>{' '}\n            <Button color=\"secondary\" onClick={this.clickEdit}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </Row>\n          <div className=\"clickeable\" onClick={this.clickCard}>\n            <Row>\n              <img className=\"folderIcon\" src={folderPic} width=\"80px\" alt=\"Folder\"></img>\n            </Row>\n            <Row>\n              <p className=\"textElement\" width=\"60px\">{this.props.labelFile}</p>\n            </Row>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  export default Folder;\n  "]},"metadata":{},"sourceType":"module"}